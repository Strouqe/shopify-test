<div {{ block.shopify_attributes }}>
  {%- liquid
    assign product_object = closest.product
    if product_object == blank
      assign product_object = product_card_product
    endif
    if product_object == blank
      assign product_object = product
    endif

    assign has_product = false
    if product_object and product_object != blank
      assign has_product = true
    endif

    assign button_id = 'popup-button-' | append: block.id
    assign modal_id = 'popup-modal-' | append: block.id
    assign button_title = block.settings.label | default: 'Quick View'
    if has_product and product_object.title != blank
      assign button_title = product_object.title
    endif

    assign variant_to_link = product_object.selected_or_first_available_variant
    assign combined_listing_count = product_object.options_with_values | map: 'values' | map: 'product_url' | compact | size
    assign no_swatch_selected = null

    unless combined_listing_count > 0
      if product_object.featured_media
        assign found_variant = false

        for variant in product_object.variants
          if variant.featured_media.id == product_object.featured_media.id
            assign variant_to_link = variant
            assign found_variant = true
            break
          endif
        endfor

        unless found_variant
          for option in product_object.options_with_values
            assign swatch_count = option.values | map: 'swatch' | compact | size
            if swatch_count > 1
              assign no_swatch_selected = true
              break
            endif
          endfor
        endunless
      endif
    endunless

    assign onboarding = false
    if product_object.id == empty or product_object == blank
      assign onboarding = true
    endif

    assign has_quick_add = false
    if settings.quick_add and product_object.available
      assign has_quick_add = true
    endif

    assign has_mobile_quick_add = false
    if has_quick_add and settings.mobile_quick_add
      assign has_mobile_quick_add = true
    endif
  -%}

  <button
    type="button"
    id="{{ button_id }}"
    class="button"
    aria-haspopup="dialog"
    aria-controls="{{ modal_id }}"
    aria-expanded="false"
    title="{{ button_title | escape }}"
    {% if has_product %}data-quick-view-handle="{{ product_object.handle }}"{% else %}disabled aria-disabled="true"{% endif %}
  >
    {{ block.settings.label | default: 'Quick View' }}
  </button>

  <dialog id="{{ modal_id }}" class="popup-dialog">
    <div class="popup-dialog__content">
      <button type="button" class="popup-dialog__close" aria-label="{{ 'accessibility.close' | t }}">
        &#x2715;
      </button>
      <div class="popup-dialog__body">
        {%- if has_product -%}
          <product-card
            class="product-card"
            data-product-id="{{ product_object.id }}"
            data-product-variants-size="{{ product_object.variants.size }}"
            id="product-card-{{ block.id }}"
            data-product-transition="{{ settings.transition_to_main_product }}"
            {% if no_swatch_selected %}
              data-no-swatch-selected="true"
            {% endif %}
            {% if onboarding %}
              data-placeholder="true"
            {% endif %}
          >
            <a
              {% unless onboarding %}
                href="{{ variant_to_link.url }}"
              {% endunless %}
              class="product-card__link"
              ref="productCardLink"
            >
              <span class="visually-hidden">
                {{ product_object.title }}
              </span>
            </a>
            <div 
              class="product-card__content layout-panel-flex layout-panel-flex--column product-grid__card spacing-style border-style gap-style"
              style="
                --quick-add-display: {% if has_quick_add %}flex{% else %}none{% endif %};
                --quick-add-mobile-display: {% if has_mobile_quick_add %}flex{% else %}none{% endif %};
              "
            >
<!-- DESKTOP LAYOUT -->
<div class="quick-view-desktop-layout">
  <div class="quick-view-image-container">
    {%- if product_object.featured_media -%}
      {{ product_object.featured_media | image_url: width: 600 | image_tag: loading: 'lazy' }}
    {%- endif -%}
  </div>

  <div class="quick-view-info-container">
    {% content_for 'block', type: 'product-title', id: 'qv-title' %}
    {% content_for 'block', type: 'price', id: 'qv-price' %}
    
    {%- if product_object.has_only_default_variant == false -%}
      {% content_for 'block', type: 'variant-picker', id: 'qv-variants' %}
    {%- endif -%}
    
    {% content_for 'block', type: 'buy-buttons', id: 'qv-buy-buttons' %}

    {% content_for 'block', type: '_product-details', id: 'qv-details', product: product_object %}
     </div>
</div>

<!-- MOBILE LAYOUT -->
<div class="quick-view-mobile-layout">
  <div class="quick-view-mobile-top">
    <div class="quick-view-mobile-image">
      {%- if product_object.featured_media -%}
        {{ product_object.featured_media | image_url: width: 600 | image_tag: loading: 'lazy' }}
      {%- endif -%}
    </div>
    <div class="quick-view-mobile-title-price">
      {% content_for 'block', type: 'product-title', id: 'qv-title-mobile' %}
      {% content_for 'block', type: 'price', id: 'qv-price-mobile' %}
    </div>
  </div>
  
  <div class="quick-view-mobile-info">
    {%- if product_object.has_only_default_variant == false -%}
      {% content_for 'block', type: 'variant-picker', id: 'qv-variants-mobile' %}
    {%- endif -%}
    
    {% content_for 'block', type: 'buy-buttons', id: 'qv-buy-buttons-mobile' %}


    {% content_for 'block', type: 'accordion', id: 'qv-accordion-mobile' %}
  </div>
</div>
            </div>
          </product-card>
        {%- else -%}
          <div class="quick-view__empty-state">
            {{ 'products.product.unavailable' | t }}
          </div>
        {%- endif -%}
      </div>

      <div class="quick-view__nav">
        <a href="#" class="quick-view__nav-button" data-quick-view-prev aria-label="{{ 'accessibility.slideshow_previous' | t }}">
          Previous
        </a>
        <a href="#" class="quick-view__nav-button" data-quick-view-next aria-label="{{ 'accessibility.slideshow_next' | t }}">
          Next
        </a>
      </div>
    </div>
  </dialog>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const openButton = document.getElementById('{{ button_id }}');
    const dialog = document.getElementById('{{ modal_id }}');

    if (!openButton || !dialog) return;

    const closeButton = dialog.querySelector('.popup-dialog__close');
    if (!closeButton) return;

    const getQuickViewHandles = () => {
      return Array.from(document.querySelectorAll('[data-quick-view-handle]'))
        .map((button) => button.dataset.quickViewHandle)
        .filter((handle) => handle && handle !== '');
    };

    const updateNavState = (dialogElement) => {
      const prev = dialogElement.querySelector('[data-quick-view-prev]');
      const next = dialogElement.querySelector('[data-quick-view-next]');
      if (!prev || !next) return;

      const handles = dialogElement.dataset.quickViewHandles ? dialogElement.dataset.quickViewHandles.split(',') : [];
      const currentIndex = Number(dialogElement.dataset.quickViewIndex);

      if (!handles.length || currentIndex < 0) {
        prev.style.visibility = 'hidden';
        next.style.visibility = 'hidden';
        return;
      }

      if (currentIndex <= 0) {
        prev.style.visibility = 'hidden';
      } else {
        prev.style.visibility = 'visible';
      }

      if (currentIndex >= handles.length - 1) {
        next.style.visibility = 'hidden';
      } else {
        next.style.visibility = 'visible';
      }
    };

    const navigateQuickView = (dialogElement, direction) => {
      const handles = dialogElement.dataset.quickViewHandles ? dialogElement.dataset.quickViewHandles.split(',') : [];
      const currentIndex = Number(dialogElement.dataset.quickViewIndex);
      const targetIndex = currentIndex + direction;

      if (targetIndex < 0 || targetIndex >= handles.length) return;

      const targetHandle = handles[targetIndex];
      const targetButton = document.querySelector('[data-quick-view-handle="' + targetHandle + '"]');

      if (!targetButton) return;

      dialogElement.close();
      window.requestAnimationFrame(() => targetButton.click());
    };

    const bindNavigation = (dialogElement, triggerButton) => {
      const prev = dialogElement.querySelector('[data-quick-view-prev]');
      const next = dialogElement.querySelector('[data-quick-view-next]');
      if (!prev || !next) return;

      if (!dialogElement.dataset.quickViewNavBound) {
        prev.addEventListener('click', (event) => {
          event.preventDefault();
          navigateQuickView(dialogElement, -1);
        });

        next.addEventListener('click', (event) => {
          event.preventDefault();
          navigateQuickView(dialogElement, 1);
        });

        dialogElement.dataset.quickViewNavBound = 'true';
      }

      const handles = getQuickViewHandles();
      const currentHandle = triggerButton.dataset.quickViewHandle;
      const currentIndex = handles.indexOf(currentHandle);

      dialogElement.dataset.quickViewHandles = handles.join(',');
      dialogElement.dataset.quickViewIndex = currentIndex;

      updateNavState(dialogElement);
    };

    const setupQuickViewGallery = (dialogElement) => {
      if (dialogElement.dataset.quickViewGalleryBound === 'true') return;

      const display = dialogElement.querySelector('[data-quick-view-images]');
      if (!display) return;

      const images = Array.from(display.querySelectorAll('.quick-view__image'));
      const thumbnails = Array.from(dialogElement.querySelectorAll('[data-quick-view-thumbnail]'));
      if (!images.length) return;

      let activeIndex = 0;

      const setActiveImage = (index) => {
        activeIndex = index;
        images.forEach((image, i) => {
          if (i === index) {
            image.classList.add('is-active');
            image.removeAttribute('aria-hidden');
          } else {
            image.classList.remove('is-active');
            image.setAttribute('aria-hidden', 'true');
          }
        });
        thumbnails.forEach((thumb) => {
          const thumbIndex = Number(thumb.dataset.quickViewThumbnail);
          if (thumbIndex === index) {
            thumb.classList.add('is-active');
            thumb.setAttribute('aria-pressed', 'true');
          } else {
            thumb.classList.remove('is-active');
            thumb.setAttribute('aria-pressed', 'false');
          }
        });
      };

      const advanceImage = () => {
        if (images.length <= 1) return;
        const nextIndex = (activeIndex + 1) % images.length;
        setActiveImage(nextIndex);
      };

      display.addEventListener('click', (event) => {
        if (event.target.matches('.quick-view__thumbnail-image')) return;
        advanceImage();
      });

      thumbnails.forEach((thumb) => {
        thumb.addEventListener('click', (event) => {
          event.preventDefault();
          const index = Number(thumb.dataset.quickViewThumbnail);
          if (!Number.isNaN(index)) {
            setActiveImage(index);
          }
        });
      });

      setActiveImage(0);
      dialogElement.dataset.quickViewGalleryBound = 'true';
    };

    openButton.addEventListener('click', (event) => {
      if (openButton.disabled) return;

      event.preventDefault();
      dialog.showModal();
      openButton.setAttribute('aria-expanded', 'true');
      bindNavigation(dialog, openButton);
      setupQuickViewGallery(dialog);
    });

    const closeModal = () => {
      dialog.close();
      openButton.setAttribute('aria-expanded', 'false');
    };

    closeButton.addEventListener('click', closeModal);

    dialog.addEventListener('click', (event) => {
      if (event.target === dialog) {
        closeModal();
      }
    });
  });
</script>

{% stylesheet %}
    .button[id^="popup-button-"] {
    width: 100%;
  }
  .popup-dialog { 
    border: none; 
    padding: 0; 
    background: transparent; 

    width: 760px;
    position: fixed;
    top: 5vh; 
    left: 50%;
    transform: translate(-50%, 0);  
    height: auto;  

    overflow-y: auto; 
    z-index: 9999;
  }
  @media (min-width: 1450px) {
  .popup-dialog {
    width: 1000px;  /* Increase width for larger screens */
    top: 8vh;  /* Adjust top position if needed */
  }
}
  .popup-dialog::backdrop { 
    background: rgba(0, 0, 0, 0.5); 
    z-index: 9998;
    pointer-events: auto;
  }
  
  .popup-dialog__content { 
    background: white; 
    color: inherit; 
    padding: 40px 40px 30px; 
    position: relative; 
    display: flex; 
    flex-direction: column; 
    gap: 24px; 
    height: fit-content; 
    z-index: 10000;
  }
  
  .popup-dialog__close { 
    position: absolute; 
    top: 8px; 
    right: 8px; 
    background: none; 
    border: none; 
    cursor: pointer;
    padding: 8px; 
    color: inherit; 
    font-size: 24px; 
    line-height: 1; 
    z-index: 10001; 
  }

  .popup-dialog .product-card__link {
    display: none !important;
  }

  .popup-dialog .product-card__content {
    display: flex !important;
    flex-direction: row !important;
    gap: 32px !important;
    align-items: flex-start !important;
  }

  .popup-dialog .product-card:hover {
    transform: none !important;
    transition: none !important;
  }

  .popup-dialog * {
    cursor: auto !important;
  }

  .popup-dialog .popup-dialog__close,
  .popup-dialog .quick-view__nav-button,
  .popup-dialog button,
  .popup-dialog input[type="radio"],
  .popup-dialog input[type="checkbox"] {
    cursor: pointer !important;
  }

  /* DESKTOP LAYOUT */
  .quick-view-desktop-layout {
    display: flex;
    flex-direction: row;
    gap: 32px;
    align-items: flex-start;
    width: 100%;
  }

  .quick-view-mobile-layout {
    display: none;
  }

  .popup-dialog .quick-view-image-container {
    flex: 1 !important;
    display: flex !important;
    align-items: flex-start !important;
    justify-content: center !important;
    align-self: center;
    height: fit-content!important;
  }

  .popup-dialog .quick-view-info-container {
    width: 345px !important;
    flex: none !important;
    display: flex !important;
    flex-direction: column !important;
    gap: 16px !important;
    height: fit-content !important;
    overflow-y: auto !important;
    padding: 16px !important;
    border: 1px solid #e5e5e5 !important;
    border-radius: 4px !important;
  }

  .popup-dialog .quick-view-image-container img {
    max-height: 550px;
    width: 100%;
    min-width: 300px;
    object-fit: contain;
  }

  .visually-hidden { position: absolute; overflow: hidden; clip: rect(0 0 0 0); height: 1px; width: 1px; margin: -1px; padding: 0; border: 0; }
  .quick-view__empty-state { padding: 24px; text-align: center; }

  .quick-view__nav { display: flex; justify-content: space-between; align-items: center; margin-top: auto; gap: 16px; }
  .quick-view__nav-button { 
    color: inherit; 
    text-decoration: underline;
    cursor: pointer;
    font-size: 14px; 
    background: none;
    border: none;
    padding: 0;
  }
  .quick-view__nav-button:hover { 
    text-decoration: none;
  }
@media (max-width: 768px) and (min-width: 621px) {
  .popup-dialog {
    position: fixed;
    bottom: 0;
    top: auto;
    left: 0;
    right: 0;
    transform: none;
    margin: 0;
    max-width: 100%;
    width: 100%;
    max-height: 90vh;
  }

  .popup-dialog__content {
    padding: 16px;
    gap: 12px;
    max-height: 90vh;
    overflow-y: auto;
  }

  .popup-dialog__close {
    top: 8px;
    right: 12px;
    font-size: 18px;
    padding: 6px;
  }

  .quick-view__nav {
    gap: 12px;
  }

  .quick-view__nav-button {
    font-size: 12px;
  }
  .popup-dialog .quick-view-image-container img {
    max-height: 300px;
    min-width: 200px;
  }
}
  @media (max-width: 620px) {
  .popup-dialog {
    position: fixed;
    bottom: 0;
    top: auto;
    left: 0;
    right: 0;
    transform: none;
    margin: 0;
      max-width: 100%;
      width: 100%;
      max-height: 90vh;
      transform: translateY(0);
    }

    .popup-dialog__content {
      padding: 16px;
      gap: 12px;
      max-height: 90vh;
      overflow-y: auto;
    }

    .popup-dialog__close {
      top: 8px;
      right: 12px;
      font-size: 18px;
      padding: 6px;
    }

    .popup-dialog .product-card__content {
      flex-direction: column !important;
      gap: 12px !important;
    }

    /* HIDE DESKTOP LAYOUT ON MOBILE */
    .quick-view-desktop-layout {
      display: none !important;
    }

    /* SHOW MOBILE LAYOUT ON MOBILE */
    .quick-view-mobile-layout {
      display: flex !important;
      flex-direction: column !important;
      gap: 12px !important;
      margin: 0 auto;
    }

    .quick-view-mobile-top {
      display: flex !important;
      flex-direction: row !important;
      gap: 12px !important;
      align-items: flex-start !important;
    }

    .quick-view-mobile-image {
      width: 120px !important;
      height: 120px !important;
      flex: none !important;
    }

    .quick-view-mobile-image img {
      max-height: 120px;
      min-width: auto;
      width: 120px;
      height: 120px;
      object-fit: cover;
    }

    .quick-view-mobile-title-price {
      flex: 1;
      display: flex;
      flex-direction: column;
      gap: 8px;
    }

    .quick-view-mobile-info {
      display: flex;
      flex-direction: column;
      gap: 8px;
    }

    .quick-view__nav {
      gap: 12px;
      padding: 0 16px 16px;
    }

    .quick-view__nav-button {
      font-size: 12px;
    }
  }

  /* Added: Accordion styles */
  .accordion__row {
    border-bottom: 1px solid var(--color-border);
  }

  .accordion__summary {
    cursor: pointer;
    padding: 1rem 0;
    font-weight: 500;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .accordion__summary::after {
    content: '+';
    transition: transform 0.2s;
  }

  .accordion__row[open] .accordion__summary::after {
    transform: rotate(45deg);
  }

  .accordion__content {
    padding-bottom: 1rem;
  }

  /* Make product details fill the full width in quick view modal */
  .popup-dialog .product-details {
    width: 100% !important;
    justify-content: flex-start !important;
  }

  .popup-dialog .product-details > .group-block {
    width: 100% !important;
  }
{% endstylesheet %}

{% schema %}
{
  "name": "Quick View Button",
  "blocks": [
    {
      "type": "accordion"
    },
    {
      "type": "_accordion-row"
    },
    {
      "type": "@theme"
    }
  ],
  "settings": [
    {
      "type": "text",
      "id": "label",
      "label": "Button Label",
      "default": "Quick View"
    }
  ],
  "presets": [
    {
      "name": "Quick View Button",
      "blocks": {
        "accordion": {
          "type": "accordion",
          "settings": {
            "icon": "plus",
            "dividers": true
          },
          "blocks": {
            "care-instructions-row": {
              "type": "_accordion-row",
              "settings": {
                "heading": "CARE INSTRUCTION"
              },
              "blocks": {
                "care-text": {
                  "type": "text",
                  "settings": {
                    "text": "<p>Wash no higher than 40 degrees. Do not use bleaches, chlorine-containing powders, or conditioners. Should be washed on a delicate mode. Dry on hangers.</p>"
                  }
                }
              },
              "block_order": ["care-text"]
            },
            "shipping-returns-row": {
              "type": "_accordion-row",
              "settings": {
                "heading": "SHIPPING & RETURNS"
              },
              "blocks": {
                "shipping-text": {
                  "type": "text",
                  "settings": {
                    "text": "<p>We strive to process and ship all orders in a timely manner, working diligently to ensure that your items are on their way to you as soon as possible. Need to return something? Just let us know.</p>"
                  }
                }
              },
              "block_order": ["shipping-text"]
            }
          },
          "block_order": ["care-instructions-row", "shipping-returns-row"]
        }
      },
      "block_order": ["accordion"]
    }
  ]
}
{% endschema %}