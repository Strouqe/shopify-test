{%- comment -%}
  File: blocks/quick-view-button.liquid
{%- endcomment -%}

<div {{ block.shopify_attributes }}>
  {%- liquid
    assign product_object = closest.product
    if product_object == blank
      assign product_object = product_card_product
    endif
    if product_object == blank
      assign product_object = product
    endif

    assign has_product = false
    if product_object and product_object != blank
      assign has_product = true
    endif

    assign button_id = 'popup-button-' | append: block.id
    assign modal_id = 'popup-modal-' | append: block.id
    assign button_title = block.settings.label | default: 'Quick View'
    if has_product and product_object.title != blank
      assign button_title = product_object.title
    endif
  -%}

  <button
    type="button"
    id="{{ button_id }}"
    class="button"
    aria-haspopup="dialog"
    aria-controls="{{ modal_id }}"
    aria-expanded="false"
    title="{{ button_title | escape }}"
    {% unless has_product %}disabled aria-disabled="true"{% endunless %}
  >
    {{ block.settings.label | default: 'Quick View' }}
  </button>

  <dialog id="{{ modal_id }}" class="popup-dialog">
    <div class="popup-dialog__content">
      <button type="button" class="popup-dialog__close" aria-label="Close">
        &#x2715;
      </button>
      <div class="popup-dialog__body">
        {%- if has_product -%}
          <div class="quick-view__grid">
            <div class="quick-view__media-column">
              {%- if product_object.featured_media -%}
                <img src="{{ product_object.featured_media | image_url: width: 800 }}" alt="{{ product_object.featured_media.alt | escape }}" loading="lazy">
              {%- else -%}
                {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg' }}
              {%- endif -%}
            </div>
          
            <div class="quick-view__info-column">
              <div class="quick-view__vendor">{{ product_object.vendor }}</div>
              <h1 class="quick-view__title">{{ product_object.title }}</h1>
              
              <div class="price
                {%- if product_object.price_varies %} price--varies{% endif -%}
                {%- if product_object.compare_at_price > product_object.price %} price--on-sale{% endif -%}
                {%- if product_object.price == 0 %} price--free{% endif -%}">

                <div class="price__container">
                  {%- if product_object.compare_at_price > product_object.price -%}
                    <div class="price__compare-at">
                      <span class="visually-hidden">{{ 'content.price_regular' | t }}</span>
                      <s>{{ product_object.compare_at_price | money }}</s>
                    </div>
                  {%- endif -%}
              
                  <div class="price__current">
                    <span class="visually-hidden">{{ 'content.price_sale' | t }}</span>
                    <span>{{ product_object.price | money }}</span>
                  </div>
                </div>
              </div>
          
              <variant-picker-quick-view data-product-variants="{{ product_object.variants | json | escape }}">
                {%- form 'product', product_object, id: 'quick-view-form', class: 'form', novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
                  <input type="hidden" name="id" value="{{ product_object.selected_or_first_available_variant.id }}">
                  
                  {%- unless product_object.has_only_default_variant -%}
                    <div class="product-form__variants">
                      {%- for option in product_object.options_with_values -%}
                        <fieldset class="js product-form__input">
                          <legend class="form__label">{{ option.name }}</legend>
                          {%- for value in option.values -%}
                            <input type="radio" id="quick-view-{{ block.id }}-{{ option.name }}-{{ forloop.index0 }}"
                                   name="{{ option.name }}"
                                   value="{{ value | escape }}"
                                   {% if option.selected_value == value %}checked{% endif %}>
                            <label for="quick-view-{{ block.id }}-{{ option.name }}-{{ forloop.index0 }}">
                              {{ value }}
                            </label>
                          {%- endfor -%}
                        </fieldset>
                      {%- endfor -%}
                    </div>
                  {%- endunless -%}
                  
                  <div>
                    <label for="Quantity-quick-view-{{ block.id }}">{{ 'content.quantity' | t }}</label>
                    <input type="number" name="quantity" id="Quantity-quick-view-{{ block.id }}" value="1" min="1" class="quantity__input">
                  </div>
          
                  <div>
                    <button type="submit" name="add" class="button" {% unless product_object.selected_or_first_available_variant.available %}disabled{% endunless %}>
                      <span>
                        {%- if product_object.selected_or_first_available_variant.available -%}
                          {{ 'products.product.add_to_cart' | t }}
                        {%- else -%}
                          {{ 'products.product.sold_out' | t }}
                        {%- endif -%}
                      </span>
                    </button>
                  </div>
                {%- endform -%}
              </variant-picker-quick-view>
            </div>
          </div>
        {%- else -%}
          <div class="quick-view__empty-state">
            {{ 'products.product.unavailable' | t }}
          </div>
        {%- endif -%}
      </div>
    </div>
  </dialog>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const openButton = document.getElementById('{{ button_id }}');
    const dialog = document.getElementById('{{ modal_id }}');
    
    if (!openButton || !dialog || openButton.disabled) return;

    const closeButton = dialog.querySelector('.popup-dialog__close');
    if (!closeButton) return;

    openButton.addEventListener('click', (event) => {
      event.preventDefault();
      dialog.showModal();
      openButton.setAttribute('aria-expanded', 'true');
    });

    const closeModal = () => {
      dialog.close();
      openButton.setAttribute('aria-expanded', 'false');
    };

    closeButton.addEventListener('click', closeModal);

    dialog.addEventListener('click', (event) => {
      if (event.target === dialog) {
        closeModal();
      }
    });
  });

  if (!customElements.get('variant-picker-quick-view')) {
    class VariantPickerQuickView extends HTMLElement {
      constructor() {
        super();
        this.addEventListener('change', this.onVariantChange.bind(this));
        this.updateOptions();
        this.updateMasterId();
      }
  
      onVariantChange() {
        this.updateOptions();
        this.updateMasterId();
        this.updateButton();
      }
  
      updateOptions() {
        this.options = Array.from(this.querySelectorAll('input[type="radio"]:checked'), (input) => input.value);
      }
  
      updateMasterId() {
        this.currentVariant = this.getVariantData().find((variant) => {
          return !variant.options.map((option, index) => {
            return this.options[index] === option;
          }).includes(false);
        });
        if (this.currentVariant) {
          this.querySelector('input[name="id"]').value = this.currentVariant.id;
        }
      }
  
      updateButton() {
        const button = this.querySelector('button[type="submit"]');
        const buttonSpan = button.querySelector('span');
        if (!this.currentVariant) {
          button.setAttribute('disabled', true);
          buttonSpan.textContent = '{{ "products.product.unavailable" | t }}';
        } else if (!this.currentVariant.available) {
          button.setAttribute('disabled', true);
          buttonSpan.textContent = '{{ "products.product.sold_out" | t }}';
        } else {
          button.removeAttribute('disabled');
          buttonSpan.textContent = '{{ "products.product.add_to_cart" | t }}';
        }
      }
  
      getVariantData() {
        if (!this.variantData) {
          this.variantData = JSON.parse(this.dataset.productVariants);
        }
        return this.variantData;
      }
    }
    customElements.define('variant-picker-quick-view', VariantPickerQuickView);
  }
</script>

<style>
  .popup-dialog { border: none; padding: 0; background: transparent; max-width: 90vw; width: 800px; }
  .popup-dialog::backdrop { background: rgba(0, 0, 0, 0.5); }
  .popup-dialog__content { background: white; color: black; padding: 2rem; position: relative; }
  .popup-dialog__close { position: absolute; top: 0.5rem; right: 0.5rem; background: none; border: none; cursor: pointer; padding: 0.5rem; color: black; font-size: 1.5rem; line-height: 1; z-index: 10; }
  .quick-view__grid { display: grid; grid-template-columns: 1fr 1fr; gap: 40px; align-items: start; }
  .quick-view__info-column { display: flex; flex-direction: column; gap: 20px; }
  .quick-view__media-column img, .quick-view__media-column .placeholder-svg { max-width: 100%; height: auto; }
  .quick-view__vendor { font-size: 14px; text-transform: uppercase; color: #666; margin-bottom: -10px; }
  .quick-view__title { font-family: 'Open Sans', sans-serif; font-weight: 400; font-size: 24px; line-height: 28px; margin: 0; }
  .quick-view__info-column .quantity__input { width: 80px; }
  .price { font-size: 18px; }
  .price--on-sale .price__current { color: red; }
  .price__compare-at { opacity: 0.6; }
  .price__container { display: flex; gap: 10px; align-items: center; }
  .product-form__variants { margin-bottom: 15px; }
  .product-form__input { border: 0; padding: 0; margin: 0 0 1.5rem; }
  .product-form__input legend { font-weight: 600; margin-bottom: 1rem; }
  .product-form__input input[type="radio"] { clip: rect(0, 0, 0, 0); overflow: hidden; position: absolute; height: 1px; width: 1px; }
  .product-form__input label { display: inline-block; margin: 0 0.5rem 0.5rem 0; padding: 1rem 1.5rem; border: 1px solid #ccc; border-radius: 4px; cursor: pointer; font-size: 1.4rem; line-height: 1; transition: border-color 0.2s; }
  .product-form__input input[type="radio"]:checked + label { border-color: #333; box-shadow: 0 0 0 1px #333; }
  .product-form__input input[type="radio"]:disabled + label { border-color: #eee; color: #ccc; cursor: not-allowed; }
  .visually-hidden { position: absolute; overflow: hidden; clip: rect(0 0 0 0); height: 1px; width: 1px; margin: -1px; padding: 0; border: 0; }
  .quick-view__empty-state { padding: 1.5rem; text-align: center; }
</style>

{% schema %}
{
  "name": "Quick View Button",
  "blocks": [],
  "settings": [
    {
      "type": "text",
      "id": "label",
      "label": "Button Label",
      "default": "Quick View"
    }
  ]
}
{% endschema %}